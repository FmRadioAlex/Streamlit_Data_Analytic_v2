import streamlit as st
import pandas as pd
import os
from datetime import datetime

DATA_FILE = "silver_data.csv"

if os.path.exists(DATA_FILE):
    df = pd.read_csv(DATA_FILE)
else:
    df = pd.DataFrame(columns=["Date", "Nick", "Silver", "Given"])

st.set_page_config(page_title="Silver Manager", page_icon="üí∞", layout="centered")

tabs = st.tabs(["üí∞ –ì–æ–ª–æ–≤–Ω–∞", "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"])

with tabs[0]:
    st.header("üí∞ Silver Manager")
    st.sidebar.subheader("üìÇ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ CSV")
    uploaded_file = st.sidebar.file_uploader("–û–±–µ—Ä—ñ—Ç—å —Ñ–∞–π–ª CSV", type="csv")

    if uploaded_file:
        df = pd.read_csv(uploaded_file)
        df.to_csv(DATA_FILE, index=False)
        st.sidebar.success("‚úÖ –§–∞–π–ª –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–æ!")
    with st.sidebar:
        st.subheader("‚ûï –î–æ–¥–∞—Ç–∏ –∫–æ–º–ø–µ–Ω—Å–∞—Ü—ñ—é")
        with st.form("add_form"):
            nick = st.text_input("–ù—ñ–∫")
            silver = st.number_input("–°—É–º–∞ Silver", min_value=0, step=10000)
            date_input = st.date_input("–î–∞—Ç–∞", datetime.now().date())
            submitted = st.form_submit_button("–î–æ–¥–∞—Ç–∏")

            if submitted:
                if nick and silver > 0:
                    new_row = {
                        "Date": date_input.strftime("%Y-%m-%d"),
                        "Nick": nick.strip(),
                        "Silver": silver,
                        "Given": False
                    }
                    df = pd.concat([df, pd.DataFrame([new_row])], ignore_index=True)
                    df.to_csv(DATA_FILE, index=False)
                    st.success(f"‚úÖ –î–æ–¥–∞–Ω–æ {nick} ({silver:,} silver)")
                else:
                    st.warning("‚ö†Ô∏è –í–≤–µ–¥–∏ –Ω—ñ–∫ —ñ —Å—É–º—É!")

        st.subheader("‚úÖ –í—ñ–¥–º—ñ—Ç–∏—Ç–∏ —è–∫ –≤–∏–¥–∞–Ω–æ–≥–æ")
        not_given = df[df["Given"] == False]

        if not not_given.empty:
            selected_nick = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –Ω—ñ–∫", not_given["Nick"].unique())
            sum_silver = not_given[not_given["Nick"] == selected_nick]["Silver"].sum()
            st.write(f"–°—É–º–∞ –¥–æ –≤–∏–¥–∞—á—ñ: **{int(sum_silver):,} silver**")
            if st.button("–í–∏–¥–∞–Ω–æ ‚úÖ"):
                df.loc[df["Nick"] == selected_nick, "Given"] = True
                df.to_csv(DATA_FILE, index=False)
                st.success(f"{selected_nick} –≤—ñ–¥–º—ñ—á–µ–Ω–æ —è–∫ –≤–∏–¥–∞–Ω–æ–≥–æ!")
        else:
            st.info("üéâ –£—Å—ñ –∫–æ–º–ø–µ–Ω—Å–∞—Ü—ñ—ó –≤–∏–¥–∞–Ω—ñ!")

    st.subheader("üìã –ü–æ—Ç–æ—á–Ω—ñ –∫–æ–º–ø–µ–Ω—Å–∞—Ü—ñ—ó")
    st.dataframe(df, use_container_width=True)

with tabs[1]:
    st.header("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–º–ø–µ–Ω—Å–∞—Ü—ñ–π")
    if df.empty:
        st.info("–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è.")
    else:
        total_silver = df["Silver"].sum()
        given_count = df[df["Given"] == True].shape[0]
        not_given_count = df[df["Given"] == False].shape[0]

        col1, col2, col3 = st.columns(3)
        col1.metric("üíµ –í—Å—å–æ–≥–æ Silver", f"{int(total_silver):,}")
        col2.metric("‚úÖ –í–∏–¥–∞–Ω–æ", given_count)
        col3.metric("‚è≥ –ù–µ –≤–∏–¥–∞–Ω–æ", not_given_count)

        st.subheader("üèÜ –¢–æ–ø –æ—Ç—Ä–∏–º—É–≤–∞—á—ñ–≤ (–∑–∞ —Å—É–º–æ—é)")
        top_chart = df.groupby("Nick")["Silver"].sum().sort_values(ascending=False).head(10)
        st.bar_chart(top_chart)
